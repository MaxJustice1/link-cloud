syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";


option csharp_namespace = "LantanaGroup.Link.Account.Protos";

package account;





////////////////////
//
//
// Account Service
//
////////////////////


service AccountService {

	//Get All Accounts.
	rpc GetAllAccounts(GetAllAccountsMessage) returns (stream AccountMessage) {
		option (google.api.http) = {
			get: "/api/account"
		};
	}

	//Get the Account for the given ID.
	rpc GetAccount(GetAccountMessage) returns (AccountMessage) {
		option (google.api.http) = {
			get: "/api/account/{id}"
		};
	}

	//Create an Account.
	rpc CreateAccount(AccountMessage) returns (AccountMessage) {
		option (google.api.http) = {
			post: "/api/account",
			body: "*"
		};
	}

	//Update the Account for the given ID.
	rpc UpdateAccount(AccountMessage) returns (AccountMessage) {
		option (google.api.http) = {
			put: "/api/account/{id}",
			body: "*"
		};
	}

	//Delete the Account for the given ID.
	rpc DeleteAccount(DeleteAccountMessage) returns (AccountDeletedMessage) {
		option (google.api.http) = {
			delete: "/api/account/{id}"
		};
	}

	//Delete the Account for the given ID.
	rpc RestoreAccount(RestoreAccountMessage) returns (AccountMessage) {
		option (google.api.http) = {
			post: "/api/account/restore/{id}"
		};
	}


	//Add an Account to a Group for the given account ID and group ID.
	rpc AddAccountToGroup(AddAccountToGroupMessage) returns (AccountMessage) {
		option (google.api.http) = {
			post: "/api/account/{accountId}/group/{groupId}"
		};
	}

	//Remove an Account from a Group for the given account ID and group ID.
	rpc RemoveAccountFromGroup(RemoveAccountFromGroupMessage) returns (AccountRemovedFromGroupMessage) {
		option (google.api.http) = {
			delete: "/api/account/{accountId}/group/{groupId}"
		};
	}


	//Add the Role to the Account for the given account ID and role ID.
	rpc AddRoleToAccount(AddRoleToAccountMessage) returns (AccountMessage) {
		option (google.api.http) = {
			post: "/api/account/{accountId}/role/{roleId}"
		};
	}

	//Remove the Role from the Account for the given account ID and role ID.
	rpc RemoveRoleFromAccount(RemoveRoleFromAccountMessage) returns (RoleRemovedFromAccountMessage) {
		option (google.api.http) = {
			delete: "/api/account/{accountId}/role/{roleId}"
		};
	}

}


message AccountMessage {
	string id = 1;
	string userName = 2;
	string emailAddress = 3;
	string firstName = 4;
	string middleName = 5;
	string lastName = 6;
	repeated string facilityIds = 7;

	repeated GroupMessage groups = 8;
	repeated RoleMessage roles = 9;

	google.protobuf.Timestamp lastSeen = 10;

	google.protobuf.Timestamp createdOn = 11;
	string createdBy = 12;
	google.protobuf.Timestamp lastModifiedOn = 13;
	string lastModifiedBy = 14;
	bool isDeleted = 15;
	
	
}


message GetAllAccountsMessage {
}

message GetAccountMessage {
	string id = 1;
}

message DeleteAccountMessage {
	string id = 1;
}

message RestoreAccountMessage {
	string id = 1;
}

message AccountDeletedMessage {
}



// Group-related
message AddAccountToGroupMessage {
	string accountId = 1;
	string groupId = 2;
}

message RemoveAccountFromGroupMessage {
	string accountId = 1;
	string groupId = 2;
}

message AccountRemovedFromGroupMessage {
}



// Role-related
message AddRoleToAccountMessage {
	string accountId = 1;
	string roleId = 2;
}

message RemoveRoleFromAccountMessage {
	string accountId = 1;
	string roleId = 2;
}

message RoleRemovedFromAccountMessage {
}



////////////////////
//
//
// Group Service
//
////////////////////



service GroupService {

	//Get all Groups.
	rpc GetAllGroups(GetAllGroupsMessage) returns (stream GroupMessage) {
		option (google.api.http) = {
			get: "/api/group"
		};
	}

	//Get the Group for a given Id.
	rpc GetGroup(GetGroupMessage) returns (GroupMessage) {
		option (google.api.http) = {
			get: "/api/group/{id}"
		};
	}

	//Create a new Group.
	rpc CreateGroup(GroupMessage) returns (GroupMessage) {
		option (google.api.http) = {
			post: "/api/group",
			body: "*"
		};
	}

	//Update the Group for a given Id.
	rpc UpdateGroup(GroupMessage) returns (GroupMessage) {
		option (google.api.http) = {
			put: "/api/group/{id}",
			body: "*"
		};
	}

	//Delete the Group for a given Id.
	rpc DeleteGroup(DeleteGroupMessage) returns (GroupDeletedMessage) {
		option (google.api.http) = {
			delete: "/api/group/{id}"
		};
	}

	//Restore the Deleted Group for a given Id.
	rpc RestoreGroup(RestoreGroupMessage) returns (GroupMessage) {
		option (google.api.http) = {
			post: "/api/group/restore/{id}"
		};
	}

	//Add the Role to the Group for the given group ID and role ID.
	rpc AddRoleToGroup(AddRoleToGroupMessage) returns (GroupMessage) {
		option (google.api.http) = {
			post: "/api/group/{groupId}/role/{roleId}"
		};
	}

	//Remove the Role from the Group for the given group ID and role ID.
	rpc RemoveRoleFromGroup(RemoveRoleFromGroupMessage) returns (RoleRemovedFromGroupMessage) {
		option (google.api.http) = {
			delete: "/api/group/{groupId}/role/{roleId}"
		};
	}

}

message GroupMessage {
	string id = 1;
	string name = 2;
	string description = 3;
	repeated string facilityIds = 4;

	repeated AccountMessage accounts = 5;
	repeated RoleMessage roles = 6;

	google.protobuf.Timestamp createdOn = 7;
	string createdBy = 8;
	google.protobuf.Timestamp lastModifiedOn = 9;
	string lastModifiedBy = 10;
	bool isDeleted = 11;

}


message GetAllGroupsMessage {
}

message GetGroupMessage {
	string id = 1;
}

message DeleteGroupMessage {
	string id = 1;
}

message RestoreGroupMessage {
	string id = 1;
}

message GroupDeletedMessage {
}


// Role-related
message AddRoleToGroupMessage {
	string groupId = 1;
	string roleId = 2;
}

message RemoveRoleFromGroupMessage {
	string groupId = 1;
	string roleId = 2;
}

message RoleRemovedFromGroupMessage {
}






////////////////////
//
//
// Role Service
//
////////////////////

service RoleService {

	//Get all Roles.
	rpc GetAllRoles(GetAllRolesMessage) returns (stream RoleMessage) {
		option (google.api.http) = {
			get: "/api/role"
		};
	}

	//Get the Role for the given ID.
	rpc GetRole(GetRoleMessage) returns (RoleMessage) {
		option (google.api.http) = {
			get: "/api/role/{id}"
		};
	}

	//Create a new Role.
	rpc CreateRole(RoleMessage) returns (RoleMessage) {
		option (google.api.http) = {
			post: "/api/role",
			body: "*"
		};
	}

	//Update the Role for the given ID.
	rpc UpdateRole(RoleMessage) returns (RoleMessage) {
		option (google.api.http) = {
			put: "/api/role/{id}",
			body: "*"
		};
	}

	//Delete the Role for the given ID.
	rpc DeleteRole(DeleteRoleMessage) returns (RoleDeletedMessage) {
		option (google.api.http) = {
			delete: "/api/role/{id}"
		};
	}

	//Restore the Deleted Role for the given ID.
	rpc RestoreRole(RestoreRoleMessage) returns (RoleMessage) {
		option (google.api.http) = {
			post: "/api/role/restore/{id}"
		};
	}

}


message RoleMessage {
	string id = 1;
	string name = 2;
	string description = 3;
	// permissions = 4
	repeated string facilityIds = 5;

	repeated AccountMessage accounts = 6;
	repeated GroupMessage groups = 7;

	google.protobuf.Timestamp createdOn = 8;
	string createdBy = 9;
	google.protobuf.Timestamp lastModifiedOn = 10;
	string lastModifiedBy = 11;
	bool isDeleted = 12;
	
}


message GetAllRolesMessage {
}

message GetRoleMessage {
	string id = 1;
}

message DeleteRoleMessage {
	string id = 1;
}

message RestoreRoleMessage {
	string id = 1;
}

message RoleDeletedMessage {
}
