<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>1875d82f-6b29-4bcf-896b-5d904fc996f5</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <RootNamespace>LantanaGroup.Link.Tenant</RootNamespace>
    <DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
    <Configurations>Debug;Release;Debug IIS</Configurations>
	<PredefinedCulturesOnly>false</PredefinedCulturesOnly>
  </PropertyGroup>

	<PropertyGroup>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<NoWarn>$(NoWarn);1591</NoWarn>
	</PropertyGroup>
	
  <ItemGroup>
    <Protobuf Include="Protos\tenant.proto" GrpcServices="Server" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AspNetCore.HealthChecks.UI.Client" Version="7.1.0" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.1" />
	<PackageReference Include="com.lantanagroup.link.Shared" Version="2023.11.20.1" />
    <PackageReference Include="CompareNETObjects" Version="4.80.0" />
    <PackageReference Include="Confluent.Kafka" Version="2.2.0" />
    <PackageReference Include="Confluent.Kafka.Extensions.OpenTelemetry" Version="0.3.0" />
    <PackageReference Include="CronExpressionDescriptor" Version="2.21.0" />
    <PackageReference Include="Grpc.AspNetCore" Version="2.57.0" />
    <PackageReference Include="Grpc.AspNetCore.Server.Reflection" Version="2.57.0" />
    <PackageReference Include="Microsoft.AspNetCore.Grpc.Swagger" Version="0.3.10" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.19.5" />
    <PackageReference Include="OpenTelemetry.Exporter.Console" Version="1.6.0" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" Version="1.6.0" />
    <PackageReference Include="OpenTelemetry.Extensions.Hosting" Version="1.6.0" />
    <PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" Version="1.5.1-beta.1" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Http" Version="1.5.1-beta.1" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Runtime" Version="1.5.1" />
    <PackageReference Include="Quartz" Version="3.7.0" />
    <PackageReference Include="Quartz.Extensions.DependencyInjection" Version="3.7.0" />
    <PackageReference Include="Quartz.Extensions.Hosting" Version="3.7.0" />
    <PackageReference Include="Serilog.AspNetCore" Version="7.0.0" />
    <PackageReference Include="Serilog.Sinks.Grafana.Loki" Version="8.1.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.5.0" />
  </ItemGroup>
	
  <ItemGroup>
    <Content Update="nuget.config">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <!--<Target Name="CreateSwaggerJson" AfterTargets="Build" Condition="$(Configuration)=='Debug'">
    <Exec Command="dotnet swagger tofile -\-output ./api.json $(OutputPath)$(AssemblyName).dll v1" WorkingDirectory="$(ProjectDir)" />
  </Target>-->

</Project>
